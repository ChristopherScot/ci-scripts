name: Build and Release

on:
  push:
    paths:
      - "VERSION"

jobs:
  discover-subfolders:
    runs-on: ubuntu-latest
    outputs:
      subfolders: ${{ steps.set-output.outputs.subfolders }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Discover subfolders
        id: set-output
        run: |
          subfolders=$(ls -d */ | sed 's#/##')
          echo "subfolders=$subfolders" >> $GITHUB_ENV
          echo "::set-output name=subfolders::$subfolders"

  build:
    needs: discover-subfolders
    runs-on: ubuntu-latest
    strategy:
      matrix:
        subfolder: ${{ fromJson(needs.discover-subfolders.outputs.subfolders) }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: "1.22"

      - name: Read version
        id: get_version
        run: echo "VERSION=$(cat VERSION | head -n 1)" >> $GITHUB_ENV

      - name: Build binary
        run: |
          cd ${{ matrix.subfolder }}
          go build -o ${{ matrix.subfolder }}

      - name: Archive binary
        run: |
          tar -czvf ${{ matrix.subfolder }}.tar.gz -C ${{ matrix.subfolder }} ${{ matrix.subfolder }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: Release ${{ env.VERSION }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ matrix.subfolder }}.tar.gz
          asset_name: ${{ matrix.subfolder }}.tar.gz
          asset_content_type: application/gzip
